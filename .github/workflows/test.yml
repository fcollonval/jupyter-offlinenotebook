# https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions
name: Test
on:
  push:
  pull_request:

jobs:

  # https://github.com/pre-commit/action
  pre-commit:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - uses: pre-commit/action@v2.0.0

  test:
    name: Pytest
    strategy:
      # Keep running so we can see if other tests pass
      fail-fast: false
      matrix:
        include:
          - python-version: '3.6'
            jupyterlab-major: '2'
          - python-version: '3.8'
            jupyterlab-major: '3'
    runs-on: ubuntu-latest
    # Includes geckdriver and firefox
    # https://github.com/actions/virtual-environments/blob/main/images/linux/Ubuntu1804-README.md
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache pip
        uses: actions/cache@v2
        with:
          # This path is specific to Ubuntu
          path: ~/.cache/pip
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-pip-${{ hashFiles('dev-requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-npm

      - name: Install dependencies
        run: python -mpip install -r dev-requirements-jl${{ matrix.jupyterlab-major }}.txt
      - name: Install plugin
        run: |
          python setup.py sdist
          python -mpip install dist/*.tar.gz
          jlpm
          jupyter labextension install --debug
      - name: Run pytest
        run: pytest -vs tests


  # https://packaging.python.org/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/
  publish-pypi:
    if: startsWith(github.ref, 'refs/tags')
    needs:
      # Only publish if other jobs passed
      - pre-commit
      - test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - name: Build package
        run: |
          python -mpip install wheel
          python setup.py sdist bdist_wheel
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1.3.0
        with:
          password: ${{ secrets.PYPI_PASSWORD }}

  # https://docs.github.com/en/actions/language-and-framework-guides/publishing-nodejs-packages#publishing-packages-to-the-npm-registry
  public-npm:
    if: startsWith(github.ref, 'refs/tags')
    needs:
      # Only publish if other jobs passed
      - pre-commit
      - test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # Setup .npmrc file to publish to npm
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x
          registry-url: https://registry.npmjs.org
      - run: npm install
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
